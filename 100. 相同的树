//非递归
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        stack<TreeNode*> sp;
        stack<TreeNode*> sq;
        while(1)
        {
            while(p != NULL || q != NULL)
            {
                if(p == NULL || q == NULL || p->val != q->val)
                {
                    return false;
                }
                sp.push(p);
                sq.push(q);
                p = p->left;
                q = q->left;
            }
            
            if(sp.empty() && sq.empty())
            {
                break;
            }
            p = sp.top();sp.pop();
            p = p->right;
            q = sq.top();sq.pop();
            q = q->right;
        }
        return true;
    }
};

//递归
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
    
        if (p==NULL && q==NULL) return true;
        if (p==NULL || q==NULL) return false;
        if (p->val!=q->val) return false;
        
        return isSameTree(p->left, q->left) && isSameTree(p->right, q->right);
    }
};
